generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model roles {
  id         Int          @id @default(autoincrement())
  value      String       @unique @default("user") @db.VarChar(255)
  user_roles user_roles[]
}

model user_roles {
  user_id Int
  role_id Int
  roles   roles @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users   users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, role_id])
}

model users {
  id         Int          @id @default(autoincrement())
  username   String       @unique @db.VarChar(255)
  email      String       @unique @db.VarChar(255)
  password   String       @db.VarChar(255)
  user_roles user_roles[]
  isActive    Boolean  @default(false)

  messages messages[] @relation("receivedMessages")

  sentMessages messages[] @relation("sentMessages")
  passwordResetTokens PasswordResetToken[]
  
}

model messages {
  id          Int      @id @default(autoincrement())
  senderId    Int
  recipientId Int
  content     String
  createdAt   DateTime @default(now())
  sender      users    @relation("sentMessages", fields: [senderId], references: [id])
  recipient   users    @relation("receivedMessages", fields: [recipientId], references: [id])
}


model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  expiresAt DateTime
  user      users    @relation(fields: [userId], references: [id], onDelete: Cascade)
}